
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.jdom2.*;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;


/**
 *
 * @author GameOver
 */
public class acceuil extends javax.swing.JFrame implements ActionListener{
    
    xmlGenerator xml;
    DefaultTableModel TM=new DefaultTableModel();
    public ArrayList <ComposentGraphique> CG;
    public HashMap <String,JButton> ButtonList;
    public HashMap <String,JPanel> PanelList;
    public HashMap <String,JLabel> LabelList;
    public HashMap <String,JTextField> TextFieldList;
    public HashMap <String,JTextArea> TextAreaList;
    public HashMap <String,JRadioButton> RButtonList;
    public HashMap <String,JCheckBox> CheckBoxList;
    public HashMap <String,JComboBox> ComboBoxList;
    public HashMap <String,JList> ListeList;
    public HashMap <String,JMenu> MenuList;
    public HashMap <String,JMenuItem> MenuItemList;
    
    private int selectedrow=0;
    private int ComposentId=0;
    private int xMouse,yMouse;
    
    Element list;
    Document document;

    public acceuil() {

        
        this.setResizable(false);
        initComponents();
        TM=(DefaultTableModel)jTable1.getModel();
        CG=new ArrayList <ComposentGraphique>();
        PanelList=new HashMap<String,JPanel>();
        ButtonList =new HashMap<String,JButton>();
        LabelList =new HashMap<String,JLabel>();
        TextFieldList=new HashMap<String,JTextField>();
        TextAreaList=new HashMap<String,JTextArea>();
        RButtonList=new HashMap<String,JRadioButton>();
        CheckBoxList=new HashMap<String,JCheckBox>();
        ComboBoxList=new HashMap<String,JComboBox>();
        ListeList=new HashMap<String,JList>();
        
        
        addButton.addActionListener(this);
        addPanel.addActionListener(this);
        addTextField.addActionListener(this);
        addLabel.addActionListener(this);
        addTextArea.addActionListener(this);
        addCheckBox.addActionListener(this);
        addRadioButton.addActionListener(this);
        addComboBox.addActionListener(this);
        addMenu.addActionListener(this);
        addList.addActionListener(this);
        addMenuItem.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        addPanel = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        addLabel = new javax.swing.JButton();
        addTextField = new javax.swing.JButton();
        addTextArea = new javax.swing.JButton();
        addCheckBox = new javax.swing.JButton();
        addRadioButton = new javax.swing.JButton();
        addList = new javax.swing.JButton();
        addComboBox = new javax.swing.JButton();
        addMenu = new javax.swing.JButton();
        addMenuItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        appPane = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        XMLEdit = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        deleteAll = new javax.swing.JButton();
        deleteLine = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cordonnee = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GÃ©nerateur du Code");
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(null);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setPreferredSize(new java.awt.Dimension(150, 500));
        jPanel2.setLayout(new java.awt.GridLayout(12, 1, 0, 5));

        addPanel.setText("Panel");
        addPanel.setName("Panel"); // NOI18N
        jPanel2.add(addPanel);

        addButton.setText("Button");
        addButton.setName("Button"); // NOI18N
        addButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                addButtonMouseDragged(evt);
            }
        });
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addButtonMousePressed(evt);
            }
        });
        jPanel2.add(addButton);

        addLabel.setText("Label");
        addLabel.setName("Label"); // NOI18N
        jPanel2.add(addLabel);

        addTextField.setText("Text Field");
        addTextField.setName("TextField"); // NOI18N
        jPanel2.add(addTextField);

        addTextArea.setText("Text Area");
        addTextArea.setName("TextArea"); // NOI18N
        jPanel2.add(addTextArea);

        addCheckBox.setText("Check Box");
        addCheckBox.setName("CheckBox"); // NOI18N
        jPanel2.add(addCheckBox);

        addRadioButton.setText("Radio Button");
        addRadioButton.setName("RadioButton"); // NOI18N
        jPanel2.add(addRadioButton);

        addList.setText("List");
        addList.setName("List"); // NOI18N
        jPanel2.add(addList);

        addComboBox.setText("Combo Box");
        addComboBox.setName("ComboBox"); // NOI18N
        jPanel2.add(addComboBox);

        addMenu.setText("Menu");
        addMenu.setName("Menu"); // NOI18N
        jPanel2.add(addMenu);

        addMenuItem.setText("Menu Item");
        addMenuItem.setName("MenuItem"); // NOI18N
        jPanel2.add(addMenuItem);

        jScrollPane2.setViewportView(jPanel2);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jLabel1.setText("Palette");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addGap(45, 45, 45))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(10, 50, 270, 430);

        appPane.setBackground(new java.awt.Color(153, 255, 255));
        appPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        appPane.setName("Fenetre"); // NOI18N
        appPane.setOpaque(false);
        appPane.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                appPaneMouseMoved(evt);
            }
        });
        appPane.setLayout(null);
        jPanel1.add(appPane);
        appPane.setBounds(300, 70, 710, 400);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        XMLEdit.setColumns(20);
        XMLEdit.setFont(new java.awt.Font("Monospaced", 3, 13)); // NOI18N
        XMLEdit.setForeground(new java.awt.Color(51, 0, 255));
        XMLEdit.setRows(5);
        jScrollPane1.setViewportView(XMLEdit);

        jTabbedPane1.addTab("XML", jScrollPane1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Composent Grafique", "Conteneur", "Name", "text", "Hight", "Width", "X", "Y"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 971, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Table", jPanel3);

        jTabbedPane1.setSelectedIndex(1);

        jPanel1.add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 490, 980, 230);

        deleteAll.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Broom_20px.png")); // NOI18N
        deleteAll.setToolTipText("Vider le tableau");
        deleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllActionPerformed(evt);
            }
        });
        jPanel1.add(deleteAll);
        deleteAll.setBounds(990, 580, 30, 29);

        deleteLine.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Delete_20px.png")); // NOI18N
        deleteLine.setToolTipText("supprimer une ligne");
        deleteLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLineActionPerformed(evt);
            }
        });
        jPanel1.add(deleteLine);
        deleteLine.setBounds(990, 550, 30, 29);

        actualiser.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Update_20px.png")); // NOI18N
        actualiser.setToolTipText("update XML");
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });
        jPanel1.add(actualiser);
        actualiser.setBounds(990, 520, 30, 29);

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jLabel2.setText("Design");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(310, 50, 40, 20);

        jToolBar1.setRollover(true);

        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Save as_30px.png")); // NOI18N
        jButton4.setToolTipText("Enregister le projet ");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Open_30px.png")); // NOI18N
        jButton6.setToolTipText("Ouvrir un projet");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton6);

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Run Command_30px.png")); // NOI18N
        jButton5.setToolTipText("GÃ©nÃ©rer le projet");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);

        jButton7.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\icon\\Help_30px.png")); // NOI18N
        jButton7.setToolTipText("Help");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton7);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 10, 1000, 30);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\GameOver\\Pictures\\bare.PNG")); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel3);
        jLabel3.setBounds(300, 40, 710, 30);

        cordonnee.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        cordonnee.setText("[ 0 , 0 ]");
        cordonnee.setToolTipText("");
        jPanel1.add(cordonnee);
        cordonnee.setBounds(310, 470, 100, 14);

        jMenu1.setText("File");

        jMenuItem2.setText("Nouveau projet");
        jMenu1.add(jMenuItem2);

        jMenu3.setText("Ouvrir un projet ...");
        jMenu1.add(jMenu3);

        jMenuItem3.setText("Enregistrer");
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem7.setText("Quiter");
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu5.setText("Run");

        jMenuItem6.setText("Generer le code");
        jMenu5.add(jMenuItem6);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
 /**
 *Cette methode pour les actions performed
 * des Button du Palet
*/
    @Override
    public void actionPerformed(ActionEvent e) {
                ComposentGraphique Composent=new ComposentGraphique();
                if(addPanel==e.getSource()){
		Composent=new ComposentGraphique(ComposentId,"Panel", appPane,"Panel","Panel",400 , 400,0,0);
                PanelList.put(String.valueOf(Composent.id),(JPanel)Composent.getcomposent());
		
                Object [] Panel=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                TM.addRow(Panel);	
			
		}
		if(addButton==e.getSource()){
                Composent=new ComposentGraphique(ComposentId,"Button", appPane,"Button","Button",50 , 200,0,0);
                ButtonList.put(String.valueOf(Composent.id),(JButton)Composent.getcomposent());
		
                Object [] bttn=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                TM.addRow(bttn);
               
		}

		if(addLabel==e.getSource()){
                    
		Composent=new ComposentGraphique(ComposentId,"Label", appPane,"Label","Label",50 , 200,appPane.getX(),appPane.getY()+100);
                
                LabelList.put(String.valueOf(Composent.id),(JLabel)Composent.getcomposent());
                
		
                Object [] Label=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                TM.addRow(Label);
			
		}
		
		if(addTextField==e.getSource()){
		Composent=new ComposentGraphique(ComposentId,"TextField", appPane,"Text Field","TextField",50 , 200,appPane.getX()+40,appPane.getY()+100);
                TextFieldList.put(String.valueOf(Composent.id),(JTextField)Composent.getcomposent());
		
                Object [] TextField=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                TM.addRow(TextField);		
			
		}
		
		if(addTextArea==e.getSource()){
		Object [] TxtA=new Object[]{"TextArea",addTextArea.getParent().getName(),addTextArea.getName(),addTextArea.getText(),addTextArea.getHeight(),addTextArea.getWidth(),addTextArea.getLocationOnScreen().getX(),addTextArea.getLocationOnScreen().getY()};
                TM.addRow(TxtA);	
			
		}
		
                if(addRadioButton==e.getSource()){
		Object [] RButtn=new Object[]{"RadioButton",addRadioButton.getParent().getName(),addRadioButton.getName(),addRadioButton.getText(),addRadioButton.getHeight(),addRadioButton.getWidth(),addRadioButton.getLocationOnScreen().getX(),addRadioButton.getLocationOnScreen().getY()};
                TM.addRow(RButtn);	
                 
		}
       
                 if(addCheckBox==e.getSource()){
		Object [] CheckBox=new Object[]{"CheckBox",addCheckBox.getParent().getName(),addCheckBox.getName(),addCheckBox.getText(),addCheckBox.getHeight(),addCheckBox.getWidth(),addCheckBox.getLocationOnScreen().getX(),addCheckBox.getLocationOnScreen().getY()};
                TM.addRow(CheckBox);	
                        
		}
                 if(addList==e.getSource()){
		Object [] List=new Object[]{"List",addList.getParent().getName(),addList.getName(),addList.getText(),addList.getHeight(),addList.getWidth(),addList.getLocationOnScreen().getX(),addList.getLocationOnScreen().getY()};
                TM.addRow(List);		
                       
		}
                if(addComboBox==e.getSource()){
		Object [] ComboBox=new Object[]{"ComboBox",addComboBox.getParent().getName(),addComboBox.getName(),addComboBox.getText(),addComboBox.getHeight(),addComboBox.getWidth(),addComboBox.getLocationOnScreen().getX(),addComboBox.getLocationOnScreen().getY()};
                TM.addRow(ComboBox);	
                        
		}
                if(addMenu==e.getSource())
                {
		Object [] Menu=new Object[]{"Menu",addMenu.getParent().getName(),addMenu.getName(),addMenu.getText(),addMenu.getHeight(),addMenu.getWidth(),addMenu.getLocationOnScreen().getX(),addMenu.getLocationOnScreen().getY()};
                TM.addRow(Menu);	
                       
		}
                if(addMenuItem==e.getSource())
                {
		Object [] MenuItem=new Object[]{"MenuItem",addMenuItem.getParent().getName(),addMenuItem.getName(),addMenuItem.getText(),addMenuItem.getHeight(),addMenuItem.getWidth(),addMenuItem.getLocationOnScreen().getX(),addMenuItem.getLocationOnScreen().getY()};
                TM.addRow(MenuItem);	
                       
		}
                
                CG.add(Composent);
                ComposentId++;
	
	}
	
    private void addButtonMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseDragged
//        int x=evt.getXOnScreen();
//        int y=evt.getYOnScreen();
//        javax.swing.JButton BButton = new javax.swing.JButton();
//        appPane.add(BButton);

//        addButton.setLocation(x-xMouse, y-yMouse);
        
    }//GEN-LAST:event_addButtonMouseDragged

    private void addButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_addButtonMousePressed

    private void deleteLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLineActionPerformed
        
       try{
        
        switch(CG.get(selectedrow).Type)
        {case "Panel":  appPane.remove(PanelList.get(String.valueOf(CG.get(selectedrow).id)));
                        appPane.setEnabled(false);appPane.setEnabled(true);
                        PanelList.remove(String.valueOf(CG.get(selectedrow).id));
                        break;
        case "Button":
                      appPane.remove(ButtonList.get(String.valueOf(CG.get(selectedrow).id)));
                      appPane.setEnabled(false);appPane.setEnabled(true);
                      ButtonList.remove(String.valueOf(CG.get(selectedrow).id));
                      break;
        case "Label":
                      appPane.remove(LabelList.get(String.valueOf(CG.get(selectedrow).id)));
                      appPane.setEnabled(false);appPane.setEnabled(true);
                      LabelList.remove(String.valueOf(CG.get(selectedrow).id));
                      break;
         
        case "TextField":
                      appPane.remove(TextFieldList.get(String.valueOf(CG.get(selectedrow).id)));
                      appPane.setEnabled(false);appPane.setEnabled(true);
                      TextFieldList.remove(String.valueOf(CG.get(selectedrow).id));
                      break;
        case "TextArea":
                      appPane.remove(TextAreaList.get(String.valueOf(CG.get(selectedrow).id)));
                      appPane.setEnabled(false);appPane.setEnabled(true);
                      TextAreaList.remove(String.valueOf(CG.get(selectedrow).id));
                      break;
                      
        }

        CG.remove(selectedrow);

        TM.removeRow(selectedrow);
        }catch(Exception e){System.out.println("erreur!"); }
                
    }//GEN-LAST:event_deleteLineActionPerformed

    private void deleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllActionPerformed
      while(TM.getRowCount()>0)
      {
          for (int i=0;i<TM.getRowCount();i++)
              TM.removeRow(i);
      }
      appPane.removeAll();
      appPane.setEnabled(false);
      appPane.setEnabled(true);
      
    }//GEN-LAST:event_deleteAllActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed

      
          for (int i=0;i<TM.getRowCount();i++)
              ActualiserAppPan(i);
      

//                      XMLEdit.setText("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
//"<project name=\"IDM\" default=\"default\" basedir=\".\">\n" +
//"    <description>Builds, tests, and runs the project IDM.</description>\n" +
//"");
//       for(int i=0;i<jTable1.getRowCount();i++)
//           XMLEdit.append("     <"+jTable1.getValueAt(i,0)
//                   +" name=\""+jTable1.getValueAt(i,1)
//                   +"\" Hight= \""+jTable1.getValueAt(i,2)
//                   +"\" Width=\""+jTable1.getValueAt(i,3)
//                   +"\" X = \""+jTable1.getValueAt(i,4)
//                   +"\" Y = \""+jTable1.getValueAt(i,5)
//                    +"\"</ "+jTable1.getValueAt(i,0)
//                   +"> \n");
//      
//       xml.writeXML();
    
    }//GEN-LAST:event_actualiserActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
          selectedrow=jTable1.getSelectedRow();    
    }//GEN-LAST:event_jTable1MouseClicked

    private void appPaneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appPaneMouseMoved
        
        cordonnee.setText("[ "+evt.getX()+","+evt.getY()+" ]");
    }//GEN-LAST:event_appPaneMouseMoved
    
/**
  * l'action d'actualiser 
  * des defferents composents dans la surface 
  * de designe apres la modification 
  * de Tableau
*/   
   
    public void ActualiserAppPan(int SRow){
     JPanel Pane=null;
        switch(CG.get(SRow).Type)
        {case "Panel":  PanelList.get(String.valueOf(CG.get(SRow).id)).setName(String.valueOf(TM.getValueAt(SRow, 2)));
                        PanelList.get(String.valueOf(CG.get(SRow).id)).setSize((int)TM.getValueAt(SRow,5),(int)TM.getValueAt(SRow, 4));
                        PanelList.get(String.valueOf(CG.get(SRow).id)).setLocation((int)TM.getValueAt(SRow,6),(int)TM.getValueAt(SRow, 7));
                        JPanel P=PanelList.get(String.valueOf(CG.get(SRow).id));
                        
                        if(TM.getValueAt(SRow, 1).equals("Fenetre"))
                           Pane=appPane;
                        else
                            for(int i=0;i<CG.size();i++)
                                if(TM.getValueAt(SRow, 1).equals(CG.get(i).name+CG.get(i).id)&&CG.get(i).Type.equals("Panel"))
                                    {Pane=PanelList.get(CG.get(i).id);break;}
                        
                        
                        if(Pane==null)
                        {   
                            ComposentGraphique Composent=new ComposentGraphique(ComposentId,"Panel", appPane,"Panel","Panel",400 , 400,appPane.getX(),appPane.getY());
                            PanelList.put(String.valueOf(Composent.id),(JPanel)Composent.getcomposent());
                            Object [] Panel=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                            TM.addRow(Panel);
                            CG.add(Composent);
                ComposentId++;
                        }
                        Pane.add(P);            
                        break;
        case "Button":
                        ButtonList.get(String.valueOf(CG.get(SRow).id)).setName(String.valueOf(TM.getValueAt(SRow, 2)));
                        ButtonList.get(String.valueOf(CG.get(SRow).id)).setSize((int)TM.getValueAt(SRow,5),(int)TM.getValueAt(SRow, 4));
                        ButtonList.get(String.valueOf(CG.get(SRow).id)).setText(String.valueOf(TM.getValueAt(SRow,3)));
                        ButtonList.get(String.valueOf(CG.get(SRow).id)).setLocation((int)TM.getValueAt(SRow,6),(int)TM.getValueAt(SRow, 7));
                        JButton B=ButtonList.get(String.valueOf(CG.get(SRow).id));
                        
                        if(TM.getValueAt(SRow, 1).equals("Fenetre"))
                           Pane=appPane;
                        else
                            for(int i=0;i<CG.size();i++)
                                if(TM.getValueAt(SRow,1).equals(CG.get(i).name+CG.get(i).id)&&CG.get(i).Type.equals("Panel"))
                                    {System.out.println("hello");Pane=PanelList.get(String.valueOf(CG.get(i).id));break;}
                        
                        
                        if(Pane==null)
                        {   
                            System.out.println("hello");
                            ComposentGraphique Composent=new ComposentGraphique(ComposentId,"Panel", appPane,"Panel","Panel",400 , 400,B.getX(),B.getY());
                            PanelList.put(String.valueOf(Composent.id),(JPanel)Composent.getcomposent());
                            Pane=PanelList.get(String.valueOf(Composent.id));
                            Object [] Panel=new Object[]{Composent.Type,Composent.conteneur.getName(),Composent.name+Composent.id,Composent.contenue,Composent.hight,Composent.width,Composent.locationX,Composent.locationY};
                            TM.addRow(Panel);
                            TM.addRow(Panel);
                            CG.add(Composent);
                        }
                        Pane.add(B);            
                        break;
                       
        case "Label":
                        LabelList.get(String.valueOf(CG.get(SRow).id)).setName(String.valueOf(TM.getValueAt(SRow, 2)));
                        LabelList.get(String.valueOf(CG.get(SRow).id)).setSize((int)TM.getValueAt(SRow,5),(int)TM.getValueAt(SRow, 4));
                        LabelList.get(String.valueOf(CG.get(SRow).id)).setText(String.valueOf(TM.getValueAt(SRow,3)));
                        LabelList.get(String.valueOf(CG.get(SRow).id)).setLocation((int)TM.getValueAt(SRow,6),(int)TM.getValueAt(SRow, 7));
                        break;
         
        case "TextField":
                      TextFieldList.get(String.valueOf(CG.get(SRow).id)).setName(String.valueOf(TM.getValueAt(SRow, 2)));
                        TextFieldList.get(String.valueOf(CG.get(SRow).id)).setSize((int)TM.getValueAt(SRow,5),(int)TM.getValueAt(SRow, 4));
                        TextFieldList.get(String.valueOf(CG.get(SRow).id)).setText(String.valueOf(TM.getValueAt(SRow,3)));
                        TextFieldList.get(String.valueOf(CG.get(SRow).id)).setLocation((int)TM.getValueAt(SRow,6),(int)TM.getValueAt(SRow, 7));
                        break;
        case "TextArea":
                        TextAreaList.get(String.valueOf(CG.get(SRow).id)).setName(String.valueOf(TM.getValueAt(SRow, 2)));
                        TextAreaList.get(String.valueOf(CG.get(SRow).id)).setSize((int)TM.getValueAt(SRow,4),(int)TM.getValueAt(SRow, 5));
                        TextAreaList.get(String.valueOf(CG.get(SRow).id)).setText(String.valueOf(TM.getValueAt(SRow,3)));
                        TextAreaList.get(String.valueOf(CG.get(SRow).id)).setLocation((int)TM.getValueAt(SRow,6),(int)TM.getValueAt(SRow, 7));
                        break;
                      
        }
        appPane.setEnabled(false);appPane.setEnabled(true);
    
    
    }
  
    
    

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(acceuil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() { 
            public void run() {
                new acceuil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea XMLEdit;
    private javax.swing.JButton actualiser;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addCheckBox;
    private javax.swing.JButton addComboBox;
    private javax.swing.JButton addLabel;
    private javax.swing.JButton addList;
    private javax.swing.JButton addMenu;
    private javax.swing.JButton addMenuItem;
    private javax.swing.JButton addPanel;
    private javax.swing.JButton addRadioButton;
    private javax.swing.JButton addTextArea;
    private javax.swing.JButton addTextField;
    private javax.swing.JPanel appPane;
    private javax.swing.JLabel cordonnee;
    private javax.swing.JButton deleteAll;
    private javax.swing.JButton deleteLine;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
